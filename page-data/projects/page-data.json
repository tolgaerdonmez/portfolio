{"componentChunkName":"component---src-pages-projects-index-js","path":"/projects/","result":{"data":{"githubData":{"fields":{"projectPages":[{"name":"portfolio","data":"<p align=\"center\">\n  <a href=\"https://www.gatsbyjs.org\">\n    <img alt=\"Gatsby\" src=\"https://www.gatsbyjs.org/monogram.svg\" width=\"60\" />\n  </a>\n</p>\n<h1 align=\"center\">\n  Gatsby's default starter\n</h1>\n\nKick off your project with this default boilerplate. This starter ships with the main Gatsby configuration files you might need to get up and running blazing fast with the blazing fast app generator for React.\n\n_Have another more specific idea? You may want to check out our vibrant collection of [official and community-created starters](https://www.gatsbyjs.org/docs/gatsby-starters/)._\n\n## üöÄ Quick start\n\n1.  **Create a Gatsby site.**\n\n    Use the Gatsby CLI to create a new site, specifying the default starter.\n\n    ```shell\n    # create a new Gatsby site using the default starter\n    gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default\n    ```\n\n1.  **Start developing.**\n\n    Navigate into your new site‚Äôs directory and start it up.\n\n    ```shell\n    cd my-default-starter/\n    gatsby develop\n    ```\n\n1.  **Open the source code and start editing!**\n\n    Your site is now running at `http://localhost:8000`!\n\n    _Note: You'll also see a second link: _`http://localhost:8000/___graphql`_. This is a tool you can use to experiment with querying your data. Learn more about using this tool in the [Gatsby tutorial](https://www.gatsbyjs.org/tutorial/part-five/#introducing-graphiql)._\n\n    Open the `my-default-starter` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes and the browser will update in real time!\n\n## üßê What's inside?\n\nA quick look at the top-level files and directories you'll see in a Gatsby project.\n\n    .\n    ‚îú‚îÄ‚îÄ node_modules\n    ‚îú‚îÄ‚îÄ src\n    ‚îú‚îÄ‚îÄ .gitignore\n    ‚îú‚îÄ‚îÄ .prettierrc\n    ‚îú‚îÄ‚îÄ gatsby-browser.js\n    ‚îú‚îÄ‚îÄ gatsby-config.js\n    ‚îú‚îÄ‚îÄ gatsby-node.js\n    ‚îú‚îÄ‚îÄ gatsby-ssr.js\n    ‚îú‚îÄ‚îÄ LICENSE\n    ‚îú‚îÄ‚îÄ package-lock.json\n    ‚îú‚îÄ‚îÄ package.json\n    ‚îî‚îÄ‚îÄ README.md\n\n1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.\n\n2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for ‚Äúsource code‚Äù.\n\n3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.\n\n4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.\n\n5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.\n\n6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you‚Äôd like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).\n\n7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.\n\n8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.\n\n9.  **`LICENSE`**: Gatsby is licensed under the MIT license.\n\n10. **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won‚Äôt change this file directly).**\n\n11. **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project‚Äôs name, author, etc). This manifest is how npm knows which packages to install for your project.\n\n12. **`README.md`**: A text file containing useful reference information about your project.\n\n## üéì Learning Gatsby\n\nLooking for more guidance? Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.org/). Here are some places to start:\n\n- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.org/tutorial/).** It starts with zero assumptions about your level of ability and walks through every step of the process.\n\n- **To dive straight into code samples, head [to our documentation](https://www.gatsbyjs.org/docs/).** In particular, check out the _Guides_, _API Reference_, and _Advanced Tutorials_ sections in the sidebar.\n\n## üí´ Deploy\n\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/gatsbyjs/gatsby-starter-default)\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/project?template=https://github.com/gatsbyjs/gatsby-starter-default)\n\n<!-- AUTO-GENERATED-CONTENT:END -->\n"},{"name":"tetris","data":"This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `yarn start`\n\nRuns the app in the development mode.<br />\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.<br />\nYou will also see any lint errors in the console.\n\n### `yarn test`\n\nLaunches the test runner in the interactive watch mode.<br />\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `yarn build`\n\nBuilds the app for production to the `build` folder.<br />\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.<br />\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `yarn eject`\n\n**Note: this is a one-way operation. Once you `eject`, you can‚Äôt go back!**\n\nIf you aren‚Äôt satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you‚Äôre on your own.\n\nYou don‚Äôt have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn‚Äôt feel obligated to use this feature. However we understand that this tool wouldn‚Äôt be useful if you couldn‚Äôt customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n"},{"name":"animated-form","data":"# Animated Form with React\n\nStandard create-react-app commands\n\n```bash\nyarn install\n\nyarn start\n\nyarn build\n```\n"},{"name":"tshirt-designer","data":"# T-Shirt Design Application with React - TypeScript & Fabric\n\n## Before start\n\nAdd your google dev api access key to `src/_config.json` then rename the file `_config.json` --> `config.json`\n\n## Install using yarn or npm\n\n```\nyarn install\nyarn start\n```"},{"name":"github-timeline","data":"## Available Scripts\n\nIn the project directory, you can run:\n\n### Before start\n\nAdd your github api access token to `src/utils/_config.json` then rename the file `_config.json` --> `config.json`\n\n### `yarn start`\n\nRuns the app in the development mode.<br />\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.<br />\nYou will also see any lint errors in the console.\n\n### `yarn build`\n\nBuilds the app for production to the `build` folder.<br />\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.<br />\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n"},{"name":"card-flip","data":"# A Card Flip Memory Game made with Reactjs\n\n## to start\n\n```\nyarn install\nyarn start\n```"},{"name":"video-subtitle-matcher","data":null},{"name":"video-extensions","data":null},{"name":"mern-vote","data":"# mern-vote\nMERN Stack Voting App\n\ndev\n```\nyarn start:dev\n```\n\nprod\n```\nyarn start:prod\n```\n"},{"name":"mern-user-auth","data":"# mern-user-auth\nMERN Stack User Auth with JWT\n\ninstall\n```\ncd ./server\nyarn install or npm install\ncd ./client\nyarn install or npm install\n```\n\nrun\n```\ncd ./server\nyarn start or npm start\ncd ./client\nyarn start or npm start\n```\n"},{"name":"my-configs","data":"# My Configs\n\n## Auto Mounting Drives\n\nuse gnome-disks\n\n## Application Launcher Shortcuts Path\n\n`~/.local/share/applications`\n\n## Changing Login Screen Background\n\n```\nTo change the login screen wallpaper go to\n/usr/share/gnome-shell/theme >> and edit >> gdm3.css\nfind lockDialogGroup\n```\n\n## Connecting to another linux machine with x2x\n\n`ssh -X [computer name]@[ip gateway] -l [user name] x2x -east -to :0.0` \n\n## Editing unity animation with Dconf (ubuntu 16.04)\n\n```\nopen dconf\ncom > canonical > unity\nminimize-speed-threshold 0 - 100\nminimize-slow-duration\n```\n\n## Dconf configs\n\n+ org.gnome.shell.extensions.dash-to-dock click-action 'minimize'\n+ org.gnome.shell.extensions.dash-to-dock running-indicator-style 'SEGMENTED'\n+ org.gnome.shell.extensions.dash-to-dock middle-click-action 'previews'\n+ org.gnome.shell.extensions.dash-to-dock scroll-action 'cycle-windows'\n+ org.gnome.shell.extensions.dash-to-dock animate-show-apps false\n+ org.gnome.shell.extensions.dash-to-dock custom-theme-running-dots-color '#e95420'\n\n## Increasing File Monitoring Amount of System Files\n\nModify the number of system monitoring files\n\nin Ubuntu\n\n`sudo gedit /etc/sysctl.conf`\n\nAdd a line at the bottom\n\n`fs.inotify.max_user_watches=524288`\n\nThen save and exit!\n\n`sudo sysctl -p`\n\nto check it\n\n> [Stackoverflow post URL](https://stackoverflow.com/questions/55763428/react-native-error-enospc-system-limit-for-number-of-file-watchers-reached)\n\n## Mouse Sensivity\n\n`xset m default`\n\n## Changing nautilus search to typeahed (tested in ubuntu 18.04)\n\nType Ahead search was removed completely from Nautilus, aka GNOME Files, since Artful. Luckily, there is a patch on GitHub that adds this functionality back to Nautilus 3.26.3, the version installed by default in Ubuntu 18.04. Now if you want to apply the patch and build Nautilus from source, go ahead, but there is a guy that did the job for us and provided a PPA to install the patched Nautilus directly:\n\n`sudo add-apt-repository ppa:lubomir-brindza/nautilus-typeahead`\n\nThen upgrade using\n\n`sudo apt full-upgrade` and kill Files `nautilus -q`\n\n> [Stackoverflow post URL](https://askubuntu.com/questions/1037732/type-ahead-search-using-nautilus-on-ubuntu-18-04)\n\n## Using Xbindkeys for my logitech mx master\n\nit opens the xbindkeysrc config file\n\n`xdg-open .xbindkeysrc`\n\nMouse buttons | Action detected as\n------- | -------\nLeft button | button 1\nPress to wheel | button 2\nRight button | button 3\nScroll wheel up | button 4\nScroll wheel down | button 5\nPress \"i\" button under wheel undetectable in linux | \nScroll hor_wheel right (up) | button 6\nScroll hor_wheel left (down) | button 7\nSide-bottom button | button 8\nSide-top button | button 9\nThumb button | Ctrl+Alt+Tab\n\n>[ArchWiki URL](https://wiki.archlinux.org/index.php/Logitech_MX_Master)\n\n## Removing Mounted devices from ubuntu dock (tested in Ubuntu 20.04)\n\n```\ngsettings set org.gnome.shell.extensions.dash-to-dock show-mounts false\n```"},{"name":"hackathon-website","data":null},{"name":"pdf-tools","data":null},{"name":"wordpress-api","data":null},{"name":"tcoin2","data":"# TCOIN\n### Blockchain, Cyrpto Currency, Wallet Tools, Miner Tools\n\n___\n> Tested in Python 3.7.3 64-bit\n## tcoin_base module\nBase of the TCOIN Blockchain/Cyrpto Currency\n\n## Installing Dependencies\n\tpip install -r req.txt\n\t\n## Using test files\nThese test files just covers localhost implementation, but you can create different nodes in different ports\nMake sure that after creating the first node, mine a block, then start another node in the same directory, that will inherit the ongoing blockchain and broadcast itself to other nodes, which found in inherited blockchain.\n\nThe `blockchain` file is written everytime when new block created\n#### Starting test node:\n\tpython test_node.py\noutput:\n>PORT: (give your port)\n#### Starting test wallet:\n\tpython test_wallet.py\noutput:\n>PORT: (give the port for the node that you want to connect)\n\nYou can learn the commands for test files by looking in them, easly understandable\n"},{"name":"file-indexer","data":"# File Indexer\n\n### python3.6 or greater will be needed to run this program\n\n### Installing modules \n```\npip install pyqt5\n```\n\n### Running the program\n```\npython client.py\n```\n### Aim of the program\nIn a sequence of already indexed files, the program helps to add into the desired index and adjust the other files for the new file.\nAnd it can also order them after you delete several files.\n\n\n# In the UI Panel\n1. First select your indexing destination\n2. Then select your desired file to copy into the sequence\n3. Click \"Add\" to add it to the sequence\nBonus: Click the button below to order the missing indexed file sequence !\n"},{"name":"episode-for-subtitle","data":"# episode-for-subtitle\nEpisode-Subtitle Matcher\n\n[See the new version which is more secure, stable and has a GUI](https://github.com/tolgaerdonmez/video-subtitle-matcher)\n\n### Use this on your own risk, your files can be overwrited while renaming. I hope that does not happen :)\n### **Note:** Episodes and subtitles need to be in alpabethical order or in numerical\n\n#### For Example:\n\nepisodes can be: (the file format doesn't need to be .mp4 in the code that i implemented have *.mp4,.mkv,.avi* you can add them like in code given)\n\n1.mp4 - 2.mp4 ....\n\nEpisode1.mp4 - Episode2.mp4 ....\n\nsubtitles can be:\n\n1.srt - 2.srt ....\n\nSubtitle1.mp4 - Subtitle2.mp4 ....\n\n#### Instructions\n\n1. Take the subtitles and the episodes in one folder\n2. copy the EpisodeRenamerForSubtitle.py to the directory above the folder which includes episodes and subtitles\nrun **EpisodeRenamerForSubtitle.py**\ntype the path like:\n*Season1/*\n\nFor **linux** uncomment lines includes:\n\n```\nepisodes.sort()\n\nsubtitles.sort()\n```\n\n*for windows comment these out*\n"},{"name":"music-list-lastfm","data":"# Music List Maker using LastFM-API\n\n### Install modules using\n```\npip install -r req.txt\n```\n\n### Run *app.py*\n"},{"name":"simple-race-game","data":"# Simple Race Game\n\n### Install modules\n```\npip install -r req.txt\n```\n#### Run: race.py\n\n## Have FUN !\n"},{"name":"dict-exerciser","data":"# dict-exerciser\nWord Exerciser with Yandex-Translate-API\n### Install modules using\n```\npip install -r req.txt\n```\n### You can run it with double-click or...\n```\n#while in directory run\npython dict_exerciser_app.py\n```\n"},{"name":"tcoin","data":"# TCOIN BLOCKCHAIN\r\n\r\n### Installing modules \r\n```\r\npip install -r req.txt\r\n```\r\n\r\n### Running the blockchain server\r\n```\r\n# for example\r\n# python tcoin.py 0.0.0.0 5000\r\n\r\npython tcoin.py your_host your_port\r\n```\r\n\r\n# Don't Forget to join TCOIN's currently *ACTIVE* decentralized *BLOCKCHAIN* network by visiting *http://157.230.100.123/join_network*\r\n"}]},"data":{"user":{"repositories":{"nodes":[{"name":"portfolio","description":"My Developer Portfolio","url":"https://github.com/tolgaerdonmez/portfolio","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"tetris","description":"Tetris Replica with Typescript + React","url":"https://github.com/tolgaerdonmez/tetris","languages":{"edges":[{"node":{"name":"TypeScript","color":"#2b7489"}}]}},{"name":"animated-form","description":"Animated Form with React","url":"https://github.com/tolgaerdonmez/animated-form","languages":{"edges":[{"node":{"name":"CSS","color":"#563d7c"}}]}},{"name":"tshirt-designer","description":"T-Shirt Design Application with React - TypeScript & Fabric","url":"https://github.com/tolgaerdonmez/tshirt-designer","languages":{"edges":[{"node":{"name":"TypeScript","color":"#2b7489"}}]}},{"name":"github-timeline","description":"Github Timeline Generator","url":"https://github.com/tolgaerdonmez/github-timeline","languages":{"edges":[{"node":{"name":"TypeScript","color":"#2b7489"}}]}},{"name":"card-flip","description":"Card Flip Memory Game with Reactjs","url":"https://github.com/tolgaerdonmez/card-flip","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"video-subtitle-matcher","description":"Video & Subtitle Filename Matcher","url":"https://github.com/tolgaerdonmez/video-subtitle-matcher","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"video-extensions","description":"List of video file extensions","url":"https://github.com/tolgaerdonmez/video-extensions","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"mern-vote","description":"MERN Stack Voting App","url":"https://github.com/tolgaerdonmez/mern-vote","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"mern-user-auth","description":"MERN Stack User Auth with JWT","url":"https://github.com/tolgaerdonmez/mern-user-auth","languages":{"edges":[{"node":{"name":"JavaScript","color":"#f1e05a"}}]}},{"name":"my-configs","description":"My Configs","url":"https://github.com/tolgaerdonmez/my-configs","languages":{"edges":[]}},{"name":"hackathon-website","description":"CAL Hackathon Website","url":"https://github.com/tolgaerdonmez/hackathon-website","languages":{"edges":[{"node":{"name":"HTML","color":"#e34c26"}}]}},{"name":"pdf-tools","description":"PDF Tools","url":"https://github.com/tolgaerdonmez/pdf-tools","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"wordpress-api","description":"Wordpress API Calls","url":"https://github.com/tolgaerdonmez/wordpress-api","languages":{"edges":[{"node":{"name":"HTML","color":"#e34c26"}}]}},{"name":"tcoin2","description":"TCOIN Blockchain Cyrpto Currency","url":"https://github.com/tolgaerdonmez/tcoin2","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"file-indexer","description":"File Indexer","url":"https://github.com/tolgaerdonmez/file-indexer","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"episode-for-subtitle","description":"Episode-Subtitle Matcher","url":"https://github.com/tolgaerdonmez/episode-for-subtitle","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"music-list-lastfm","description":"Music List Maker using LastFM-API","url":"https://github.com/tolgaerdonmez/music-list-lastfm","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"simple-race-game","description":"A Simple Race Game","url":"https://github.com/tolgaerdonmez/simple-race-game","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"dict-exerciser","description":"Word Exerciser with Yandex-Translate-API","url":"https://github.com/tolgaerdonmez/dict-exerciser","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}},{"name":"tcoin","description":"tcoin-blockchain","url":"https://github.com/tolgaerdonmez/tcoin","languages":{"edges":[{"node":{"name":"Python","color":"#3572A5"}}]}}]}}}}},"pageContext":{}}}